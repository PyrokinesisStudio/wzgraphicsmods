What is here?  Stuff for making videos.

WZGM has a video dump function ( hotkey F11 toggles on/off ) that
dumps video frames in-game to the $(configdir)/videodumps directory.

The frames are dumped as raw PPM files for speed reasons.  You can
convert them to AVI using the wzencode.py script.

The video dumper writes frames in a single .ppm file named  wz2100_SCENE#.ppm
where SCENE#  ranges from 001-999.

New! Improved!  The video dumper now does audio, too.

The trick for audio is to set your mixer capture device to grab the game sound.  The capture device is normally set to the microphone so will have to do this by hand before doing video dumps.

Requirements: wzencode.py requires ffmpeg and python

converts WZ videodump files (ppm format) to video.
output format depends on output file extension
video dump filenames are wz2100_SCENE.ppm where
SCENE is a  3 digit number with leading zeros.
example:  wz2100_001_001.ppm  for scene 1, frame 1.

examples:

		wzencode.py test.avi

This is a minimal example.  It converts the scene 1 video dump (wz2100_001.ppm) to an AVI file using the default arguments.  

	 wzencode.py -s 2 -b 1.0M test2.avi

This example encodes scene 2 (wz2100_002_*.ppm) into a AVI file with a bitrate of 1.0 Mbps.

	 wzencode.py --help

This prints out the usage and help message.


More details:

options that are the same as ffmpeg
-b bitrate		 default: 200k bits/second
-r output framerate		default: 25 fps

wzencode specific options
-s NNN		scene number.  default: 001
--ifr input frame rate.  default: 10
--basename wz2100_

-s size wxh		 default: same as WZ resolution


Hints:

For ease of use, you can symlink wzencode.py into your bin dir with
something like this:

		  ln -s `pwd`/wzencode.py ~/bin

Notes: the `` marks around pwd are back-ticks, not quotes.  I have a
bin dir in my home dir where I keep personal utilites, but you can
link the utility into anywhere in your PATH.







