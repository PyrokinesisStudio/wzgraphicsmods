What is here?  Stuff for making videos.

WZGM has a video dump function ( hotkey F11 toggles on/off ) that
dumps video frames in-game to the $(configdir)/videodumps directory.

You will need to reset your keymap since one of the default keys has
changed.  F11 was used to toggle formation speed limiting, a feature no
longer present.

The frames are dumped as raw PPM files for speed reasons.  You can
convert them to AVI using the wzencode.py script.

The video dumper writes frames in a single .ppm file named
wz2100_SCENE#.ppm where SCENE# ranges from 001-999.

New! Improved!  The video dumper now does audio, too.
Audio currently defaults to 2 channel stereo at 48000 Hz (cd quality)

The trick for audio is to set your mixer capture device to grab the
game sound.  The capture device is normally set to the microphone so
will have to do this by hand before doing video dumps.

SET YOUR AUDIO CAPTURE DEVICE

If you do not set your Capture Device, Audio Capture will NOT grab in-game sound.

Requirements: 

	The video dumper uses standard OpenAL and OpenGL calls from inside
	Warzone.  

	The wzencode.py is a Unix-style utility program (uses #! 
	syntax).  It requires ffmpeg and python
	
	Don't forget to RESET YOUR KEYMAP


Some details:

The wzencode.py script converts WZ videodump files (ppm format) to video.

Vidoe output format depends on output file extension as per ffmpeg.

The video dump filenames are wz2100_SCENE.ppm where
SCENE is a  3 digit number with leading zeros.
  example:  
     wz2100_001.ppm is the raw data (ppm format) for scene 1
	 wz2100_001.raw is the audio data (16 bit 2 channel stereo 48000 Hz rate)



Usage:

The wzencode.py script is meant to be run from the directory the dump data files are in.  This is the videodumps subdir of your warzone config dir.


Examples:

		wzencode.py test.avi

This is a minimal example.  It converts the scene 1 video dump (wz2100_001.ppm) to an AVI file using the default arguments.  

	 wzencode.py -s 2 -b 1.0M test2.avi

This example encodes scene 2 (wz2100_002_*.ppm) into a AVI file with a bitrate of 1.0 Mbps.

	 wzencode.py --help

This prints out the usage and help message.


More details:

options that are the same as ffmpeg
-b bitrate		 default: 1000k bits/second
-r output framerate		default: 25 fps

wzencode specific options
-s NNN		scene number.  default: 001
--ifr input frame rate.  default: 20
--basename wz2100_

-s size wxh		 default: same as WZ resolution


Hints:

For ease of use, you can symlink wzencode.py into your bin dir with
something like this:

		  ln -s `pwd`/wzencode.py ~/bin

Notes: the `` marks around pwd are back-ticks, not quotes.  I have a
bin dir in my home dir where I keep personal utilites, but you can
link the utility into anywhere in your PATH.  Creating symlinks in /usr/bin or /usr/local/bin will require root access.

Another option is to copy the wzencode.py script into your videdumps directory and run it from there.





