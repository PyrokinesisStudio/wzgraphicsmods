r5375 | slouken | 2009-12-11 16:24:53 +0100 (Fri, 11 Dec 2009)

Fixed bug #849 some more:

 Tim Angus      2009-11-26 14:41:04 PST

Fix to the cursor not being responsive when the app doesn't have
SDL_APPINPUTFOCUS

The problems with the directx driver are similar to the ones I introduced in
the windib driver with r4478. Basically if the application did not have focus,
the mouse position is not updated. It's not really that the mouse cursor was
invisible, it's that it is stuck underneath another window where you can't see
it. This behaviour predates my r4478 changes and is the reason I unwittingly
broke the windib driver as I had been replicating the way the directx driver
deals with focus. Prior to r4478 the directx driver could not be used in
windowed mode, so the broken focusing would not have actually been observable.

Anyway, the attached patch makes the directx driver behaves like the windib
driver in terms of focus.

Time for 1.2.15? ;)

I've added an additional change of moving the calls to WIN_GrabInput that are
made on WM_ACTIVATE messages so that they only occur when the state is
SDL_APPINPUTFOCUS. When a fullscreen application is minimised using alt-tab, it
still receives WM_ACTIVATE messages when other applications are selected. If
WIN_GrabInput is called when the SDL application doesn't have input focus, bad
things happen; it shouldn't be being called at all.

I've also added a line to make sure that SDL_APPMOUSEFOCUS state is dropped
when the application is minimised following an alt-tab.
---
   M /branches/SDL-1.2/src/video/wincommon/SDL_sysevents.c
   M /branches/SDL-1.2/src/video/windx5/SDL_dx5events.c

Index: branches/SDL-1.2/src/video/wincommon/SDL_sysevents.c
===================================================================
--- $sourcebase.org/src/video/wincommon/SDL_sysevents.c	2009-10-13 01:07:14.000000000 +0200	(revision 5374)
+++ $sourcebase/src/video/wincommon/SDL_sysevents.c	2009-12-11 16:24:53.000000000 +0100	(revision 5375)
@@ -316,10 +316,10 @@
 			if ( active ) {
 				/* Gain the following states */
 				appstate = SDL_APPACTIVE|SDL_APPINPUTFOCUS;
-				if ( this->input_grab != SDL_GRAB_OFF ) {
-					WIN_GrabInput(this, SDL_GRAB_ON);
-				}
-				if ( !(SDL_GetAppState()&SDL_APPINPUTFOCUS) ) {
+				if ( !(SDL_GetAppState() & SDL_APPINPUTFOCUS) ) {
+					if ( this->input_grab != SDL_GRAB_OFF ) {
+						WIN_GrabInput(this, SDL_GRAB_ON);
+					}
 					if ( ! DDRAW_FULLSCREEN() ) {
 						DIB_SwapGamma(this);
 					}
@@ -344,14 +344,16 @@
 				if ( minimized ) {
 					appstate |= SDL_APPACTIVE;
 				}
-				if ( this->input_grab != SDL_GRAB_OFF ) {
-					WIN_GrabInput(this, SDL_GRAB_OFF);
-				}
+
 				if ( SDL_GetAppState() & SDL_APPINPUTFOCUS ) {
+					if ( this->input_grab != SDL_GRAB_OFF ) {
+						WIN_GrabInput(this, SDL_GRAB_OFF);
+					}
 					if ( ! DDRAW_FULLSCREEN() ) {
 						DIB_SwapGamma(this);
 					}
 					if ( WINDIB_FULLSCREEN() ) {
+						appstate |= SDL_APPMOUSEFOCUS;
 						SDL_RestoreDesktopMode();
 #if defined(_WIN32_WCE)
 						LoadAygshell();
@@ -372,8 +374,7 @@
 		case WM_MOUSEMOVE: {
 
 #ifdef WM_MOUSELEAVE
-			/* No need to handle SDL_APPMOUSEFOCUS when fullscreen */
-			if ( SDL_VideoSurface && !FULLSCREEN() ) {
+			if ( SDL_VideoSurface ) {
 				/* mouse has entered the window */
 
 				if ( !(SDL_GetAppState() & SDL_APPMOUSEFOCUS) ) {
@@ -398,11 +399,8 @@
 #ifdef WM_MOUSELEAVE
 		case WM_MOUSELEAVE: {
 
-			/* No need to handle SDL_APPMOUSEFOCUS when fullscreen */
-			if ( SDL_VideoSurface && !FULLSCREEN() ) {
+			if ( SDL_VideoSurface ) {
 				/* mouse has left the window */
-				/* or */
-				/* Elvis has left the building! */
 				posted = SDL_PrivateAppActive(0, SDL_APPMOUSEFOCUS);
 			}
 		}
